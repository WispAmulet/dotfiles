{
  /*
   * Basic
   */
  "window.title": "${dirty}${activeEditorMedium}${separator}${rootName}",
  "window.zoomLevel": -1,
  "window.newWindowDimensions": "inherit",
  "editor.renderControlCharacters": false,
  "editor.fontFamily": "'Cascadia Code PL ?', 'Dank Mono ?', 'Operator Mono', 'Fira Code Retina', 'Courier New', 'Microsoft Yahei', 'Noto Color Emoji'",
  "editor.wordWrap": "on",
  "editor.tabSize": 2,
  "editor.fontSize": 20,
  "editor.fontWeight": "400",
  "editor.lineHeight": 30,
  "editor.letterSpacing": 0.6,
  "editor.renderWhitespace": "none",
  "editor.minimap.enabled": false,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.snippetSuggestions": "inline",
  "editor.suggestSelection": "first",
  "editor.fontLigatures": true,
  "editor.rulers": [80, 100, 120],
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 5,
  "editor.cursorBlinking": "solid",
  "editor.renderFinalNewline": true,
  "breadcrumbs.enabled": false,
  "files.autoSave": "off",
  "files.trimTrailingWhitespace": true,
  "workbench.iconTheme": "vscode-icons",
  "workbench.editor.showTabs": true,
  "workbench.editor.tabSizing": "shrink",
  "workbench.activityBar.visible": true,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  /* Custom workbench colors if needed */
  "workbench.colorCustomizations": {
    "scrollbarSlider.background": "#355166cc"
    // "editorIndentGuide.background": "#ffffff1f",
    // "statusBar.background": "#25e6cd",
    // "activityBar.background": "#1B2B34",
    // "sideBar.background": "#1d252d",
    // "statusBar.noFolderBackground": "#233444",
    // "statusBar.foreground": "#ada5a2"
    // "statusBar.background": "#233444",
  },
  /* Terminal */
  "terminal.integrated.fontFamily": "'Cascadia Code PL', 'Fira Code Retina', 'Noto Color Emoji'",
  "terminal.integrated.letterSpacing": 1,
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.fontWeightBold": "bold",
  "terminal.integrated.shellArgs.windows": [
    "--disable-lcd-text",
    "--disable-gpu",
    "--disable-directwrite-for-ui",
    "--disable-font-antialiasing"
  ],
  /*
   * Plugins
   */
  /* Custom CSS and JS (disabled) */
  // Very important: Install this plugin: https://github.com/be5invis/vscode-custom-css
  // you'll need to change this to an absolute path on your computer
  // "vscode_custom_css.imports": [
  // for my windows 10
  // "file:///C:/Users/ylyza/.vscodestyles.css"
  // for my debian 9
  // "file:///home/suu/.vscodestyles.css"
  // ],
  // "vscode_custom_css.policy": true,
  /* Code runner */
  "code-runner.defaultLanguage": "javascript",
  /* Stylus */
  "languageStylus.useSeparator": false,
  "files.associations": {
    "*.styl": "stylus",
    "*.cjson": "jsonc",
    "*.wxss": "css",
    "*.wxs": "javascript"
  },
  /* Emmet */
  "emmet.excludeLanguages": ["stylus"],
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "wxml": "html"
  },
  /* Color Highlight */
  "color-highlight.languages": [
    "*"
    // "!javascript"
  ],
  "color-highlight.matchWords": true,
  /* ESLint */
  "eslint.alwaysShowStatus": true,
  // format a file when save, e.g. ctrl + s
  "editor.formatOnSave": true,
  // disable the default formatter for .js .jsx .ts .tsx files
  "[javascript]": {
    "editor.formatOnSave": false
  },
  "[javascriptreact]": {
    "editor.formatOnSave": false
  },
  "[typescript]": {
    "editor.formatOnSave": false
  },
  "[typescriptreact]": {
    "editor.formatOnSave": false
  },
  // tell the ESLint plugin to auto fix on save
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  /* Prettier */
  "prettier.singleQuote": true,
  // disable Prettier extension for .js .jsx .ts .tsx files
  // because we are using EsLint's prettier plugin to auto format
  // we don't want VSCode's Prettier extension format these files at the same time
  // and Prettier will still work with other languages as usual
  "prettier.disableLanguages": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "dart"
  ],
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  /* TSLint (deprecated) */
  // ! "[typescript]": {
  // !   "editor.formatOnSave": false
  // ! },
  // ! "tslint.autoFixOnSave": true,
  // ! "tslint.alwaysShowStatus": true,
  /* Better comments */
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#FF2D00",
      "strikethrough": true,
      "backgroundColor": "transparent"
    },
    {
      "tag": "?",
      "color": "#fff",
      "strikethrough": false,
      "backgroundColor": "#b362ff"
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "backgroundColor": "transparent"
    },
    {
      "tag": "TODO",
      "color": "#fff",
      "strikethrough": false,
      "backgroundColor": "#ff8c00"
    },
    {
      "tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "backgroundColor": "transparent"
    }
  ],
  /* Gitlens */
  "gitlens.advanced.messages": {
    "suppressSupportGitLensNotification": true,
    "suppressResultsExplorerNotice": true,
    "suppressShowKeyBindingsNotice": true,
    "suppressWelcomeNotice": true
  },
  "git.confirmSync": false,
  "gitlens.keymap": "chorded",
  "gitlens.views.fileHistory.enabled": true,
  "gitlens.views.lineHistory.enabled": true,
  /* Settings sync */
  "sync.gist": "",
  "sync.quietSync": false,
  "sync.removeExtensions": true,
  "sync.syncExtensions": true,
  "sync.autoDownload": false,
  "sync.autoUpload": false,
  "sync.forceDownload": false,
  /* carbon-now-sh */
  "carbon.backgroundColor": "rgba(0, 0, 0, 0)",
  "carbon.theme": "dracula",
  "carbon.fontSize": 16,
  "carbon.fontFamily": "dm",
  "carbon.lineNumbers": true,
  /* Version lens */
  "versionlens.showVersionLensesAtStartup": false,
  "versionlens.showDependencyStatusesAtStartup": true,
  /* Jest */
  "jest.autoEnable": false,
  "jest.debugMode": true,
  /* :emojisense: */
  "emojisense.languages": {
    "markdown": true,
    "plaintext": {
      "markupCompletionsEnabled": false,
      "emojiDecoratorsEnabled": false
    },
    "git-commit": true,
    "javascript": true,
    "typescript": true,
    "typescriptreact": true
  },
  /* Code spell */
  // "cSpell.showStatus": false
  /*
   * Languages
   */
  "html.format.wrapLineLength": 100,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  /* C */
  "cmake.configureOnOpen": true,
  "C_Cpp.updateChannel": "Insiders",
  "C_Cpp.default.intelliSenseMode": "msvc-x64",
  "[c]": {
    "editor.tabSize": 4
  },
  "[cpp]": {
    "editor.tabSize": 4
  },
  // "C_Cpp.clang_format_path": "/usr/bin/clang-format",
  /* Python */
  "python.jediEnabled": false,
  "[python]": {
    "editor.tabSize": 4
  },
  /* Golang */
  "[go]": {
    "editor.tabSize": 4
  },
  /* Dart */
  "dart.devToolsTheme": "light",
  "[dart]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false
  },
  /*
   * Terminal path - for Windows
   */
  /* bash */
  // "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
  /* powershell */
  // "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
  /* Custom theme colors */
  // ~/.vscode/extensions/wesbos.theme-cobalt2-2.1.6/theme/cobalt2.json
  /*
   * Theme color customization
   */
  "editor.tokenColorCustomizations": {
    "[Cobalt2]": {
      "textMateRules": [
        {
          "name": "[js, jsx, ts, tsx] - Support",
          "scope": [
            "source.js support.type",
            "source.jsx support.type",
            "source.ts support.type",
            "source.tsx support.type"
          ],
          "settings": {
            "foreground": "#80ffbb",
            "fontStyle": "italic"
          }
        },
        {
          // Keyword => `import`, `default`, ...
          "name": "[ts, tsx] - Keyword",
          "scope": [
            "source.ts keyword", // override default
            "source.tsx keyword"
          ],
          "settings": {
            "foreground": "#ff9d00"
          }
        },
        {
          "name": "[ts] - Punctuation Parameters",
          "scope": "source.ts punctuation.definition.parameters", // override default
          "settings": {
            "foreground": "#ffee80"
          }
        },
        {
          // Entity color => class `Home`
          "name": "[js, jsx, ts, tsx] - Entity Name Type",
          "scope": [
            "source.js entity.name.type.class.js", // override default setting
            "source.js entity.name.type",
            "source.jsx entity.name.type",
            "source.ts entity.name.type",
            "source.tsx entity.name.type"
          ],
          "settings": {
            "foreground": "#80ffbb"
            // "fontStyle": "italic"
          }
        },
        {
          // Inherited component => class Home extends React.`Component`
          "name": "[js, jsx, ts, tsx] - Inherited Component",
          "scope": [
            "source.js entity.other.inherited-class.js",
            "source.jsx entity.other.inherited-class.jsx",
            "source.ts entity.other.inherited-class.ts",
            "source.tsx entity.other.inherited-class.tsx"
          ],
          "settings": {
            "foreground": "#cccccc"
          }
        },
        {
          // Keyword => `var`, `const`, `let`
          "name": "[js, jsx, ts, tsx] - Storage",
          "scope": [
            "source.js storage",
            "source.jsx storage",
            "source.ts storage",
            "source.tsx storage"
          ],
          "settings": {
            "foreground": "#ff9d00"
          }
        },
        {
          // Keyword => `function`
          "name": "[js, jsx, ts, tsx] - Storage Type",
          "scope": [
            "source.js storage.type.function.js",
            "source.jsx storage.type.function.jsx",
            "source.ts storage.type.function.ts",
            "source.tsx storage.type.function.tsx"
          ],
          "settings": {
            "foreground": "#fb94ff"
            // "fontStyle": "italic"
          }
        },
        {
          "name": "Italicsify for Operator Mono",
          "scope": [
            "storage.modifier.ts", // extends keyword
            "storage.modifier.tsx",
            "entity.other.attribute-name.ts", // attribute names
            "entity.other.attribute-name.tsx"
          ],
          "settings": {
            "fontStyle": "italic"
          }
        }
      ]
    }
  },
  "workbench.colorTheme": "Cobalt2",
  "cSpell.userWords": [
    "Deno",
    "Unprocessable",
    "browserslist",
    "esnext",
    "middlewares",
    "prestart",
    "scrollbar",
    "wispamulet"
  ],
  "window.menuBarVisibility": "toggle",
  "shellformat.path": "/home/suu/go/bin/shfmt",
  "python.languageServer": "Microsoft",
  "debug.javascript.codelens.npmScripts": "never",
  "snipsnap.silent": true
}
