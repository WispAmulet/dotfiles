{
  /*
   @ Basic Settings
   */
  "window.title": "${dirty}${activeEditorMedium}${separator}${rootName}",
  "window.zoomLevel": -1,
  "window.newWindowDimensions": "inherit",
  "window.menuBarVisibility": "toggle",
  "editor.renderControlCharacters": false,
  "editor.fontFamily": "'Cascadia Code PL ?', 'Dank Mono ?', 'Operator Mono', 'Fira Code Retina', 'Courier New', 'Microsoft Yahei', 'Noto Color Emoji'",
  "editor.wordWrap": "on",
  "editor.tabSize": 2,
  "editor.fontSize": 20,
  "editor.fontWeight": "400",
  "editor.lineHeight": 30,
  "editor.letterSpacing": 0.6,
  "editor.renderWhitespace": "none",
  "editor.minimap.enabled": false,
  "editor.acceptSuggestionOnEnter": "off",
  "editor.snippetSuggestions": "inline",
  "editor.suggestSelection": "first",
  "editor.fontLigatures": true,
  "editor.rulers": [80, 100, 120],
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 5,
  "editor.cursorBlinking": "solid",
  "editor.renderFinalNewline": true,
  "workbench.colorTheme": "Cobalt2",
  "workbench.iconTheme": "vscode-icons",
  "workbench.editor.showTabs": true,
  "workbench.editor.tabSizing": "shrink",
  "workbench.activityBar.visible": true,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "breadcrumbs.enabled": false,
  "debug.javascript.codelens.npmScripts": "never",
  "files.autoSave": "off",
  "files.trimTrailingWhitespace": true,
  "files.associations": {
    "*.styl": "stylus",
    "*.cjson": "jsonc",
    "*.wxss": "css",
    "*.wxs": "javascript"
  },
  //* Terminal
  "terminal.integrated.fontFamily": "'Cascadia Code PL', 'Fira Code Retina', 'Noto Color Emoji'",
  "terminal.integrated.letterSpacing": 1,
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.fontWeightBold": "bold",
  "terminal.integrated.shellArgs.windows": [
    "--disable-lcd-text",
    "--disable-gpu",
    "--disable-directwrite-for-ui",
    "--disable-font-antialiasing"
  ],
  //* Terminal path - for Windows
  /* bash */
  // "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
  /* powershell */
  // "terminal.integrated.shell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"
  /*
   @ Plugins
   */
  /* Custom CSS and JS (disabled) */
  // Very important: Install this plugin: https://github.com/be5invis/vscode-custom-css
  // you'll need to change this to an absolute path on your computer
  // "vscode_custom_css.imports": [
  // for my windows 10
  // "file:///C:/Users/ylyza/.vscodestyles.css"
  // for my debian 9
  // "file:///home/suu/.vscodestyles.css"
  // ],
  // "vscode_custom_css.policy": true,
  //* :emojisense:
  "emojisense.languages": {
    "markdown": true,
    "plaintext": {
      "markupCompletionsEnabled": false,
      "emojiDecoratorsEnabled": false
    },
    "git-commit": true,
    "javascript": true,
    "typescript": true,
    "typescriptreact": true
  },
  //* Better comments
  "better-comments.tags": [
    {
      "tag": "!",
      "color": "#ff2d00",
      "strikethrough": true,
      "backgroundColor": "transparent"
    },
    {
      "tag": "?",
      "color": "#fff",
      "strikethrough": false,
      "backgroundColor": "#b362ff"
    },
    {
      "tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "backgroundColor": "transparent"
    },
    {
      "tag": "TODO",
      "color": "#fff",
      "strikethrough": false,
      "backgroundColor": "#ff8c00"
    },
    {
      "tag": "*",
      "color": "#98c379",
      "strikethrough": false,
      "backgroundColor": "transparent"
    },
    {
      "tag": "@",
      "color": "#fff",
      "strikethrough": false,
      "backgroundColor": "#98c379"
    }
  ],
  //* carbon-now-sh
  "carbon.backgroundColor": "rgba(0, 0, 0, 0)",
  "carbon.theme": "dracula",
  "carbon.fontSize": 16,
  "carbon.fontFamily": "dm",
  "carbon.lineNumbers": true,
  //* Code runner
  "code-runner.defaultLanguage": "javascript",
  //* Color Highlight
  "color-highlight.languages": [
    "*"
    // "!javascript"
  ],
  "color-highlight.matchWords": true,
  //* Emmet
  "emmet.excludeLanguages": ["stylus"],
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "wxml": "html"
  },
  //* ESLint & Prettier
  "eslint.alwaysShowStatus": true,
  // format a file when save, e.g. ctrl + s
  "editor.formatOnSave": true,
  // disable the default formatter for .js .jsx .ts .tsx files
  "[javascript]": {
    "editor.formatOnSave": false
  },
  "[javascriptreact]": {
    "editor.formatOnSave": false
  },
  "[typescript]": {
    "editor.formatOnSave": false
  },
  "[typescriptreact]": {
    "editor.formatOnSave": false
  },
  // tell the ESLint plugin to auto fix on save
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true
  },
  "prettier.singleQuote": true,
  // disable Prettier extension for .js .jsx .ts .tsx files
  // because we are using EsLint's prettier plugin to auto format
  // we don't want VSCode's Prettier extension format these files at the same time
  // and Prettier will still work with other languages as usual
  "prettier.disableLanguages": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "dart"
  ],
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  //* Git & Gitlens
  "git.confirmSync": false,
  "gitlens.advanced.messages": {
    "suppressSupportGitLensNotification": true,
    "suppressResultsExplorerNotice": true,
    "suppressShowKeyBindingsNotice": true,
    "suppressWelcomeNotice": true
  },
  "gitlens.keymap": "chorded",
  "gitlens.views.fileHistory.enabled": true,
  "gitlens.views.lineHistory.enabled": true,
  //* Jest
  "jest.autoEnable": false,
  "jest.debugMode": true,
  //* Settings Sync
  "sync.gist": "a0bcf29d6bc2a11c4190180e47f6d15c",
  "sync.autoDownload": false,
  "sync.autoUpload": false,
  "sync.forceDownload": false,
  "sync.quietSync": false,
  "sync.removeExtensions": true,
  "sync.syncExtensions": true,
  //* Shell Format
  "shellformat.path": "/home/suu/go/bin/shfmt",
  //* Snipsnap - Workspace Snippets
  "snipsnap.silent": true,
  //* Stylus
  "languageStylus.useSeparator": false,
  //*! TSLint (deprecated)
  //! "[typescript]": {
  //!   "editor.formatOnSave": false
  //! },
  //! "tslint.autoFixOnSave": true,
  //! "tslint.alwaysShowStatus": true,
  //* Version lens
  "versionlens.showVersionLensesAtStartup": false,
  "versionlens.showDependencyStatusesAtStartup": true,
  //* Code Spell
  // "cSpell.showStatus": false,
  "cSpell.userWords": [
    "Deno",
    "Unprocessable",
    "browserslist",
    "esnext",
    "middlewares",
    "prestart",
    "scrollbar",
    "wispamulet"
  ],
  /*
   @ Languages
  */
  "html.format.wrapLineLength": 100,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "typescript.updateImportsOnFileMove.enabled": "always",
  //* C
  "[c]": {
    "editor.tabSize": 4
  },
  "[cpp]": {
    "editor.tabSize": 4
  },
  "cmake.configureOnOpen": true,
  "C_Cpp.updateChannel": "Insiders",
  "C_Cpp.default.intelliSenseMode": "msvc-x64",
  // "C_Cpp.clang_format_path": "/usr/bin/clang-format",
  //* Dart
  "[dart]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false
  },
  "dart.devToolsTheme": "light",
  //* Golang
  "[go]": {
    "editor.tabSize": 4
  },
  //* Python
  "[python]": {
    "editor.tabSize": 4
  },
  "python.languageServer": "Microsoft",
  "python.jediEnabled": false,
  /*
   @ Custom colors
  */
  //* Workbench colors
  "workbench.colorCustomizations": {
    "[Cobalt2]": {
      "scrollbarSlider.background": "#355166cc"
      // "scrollbarSlider.background": "#2f3336cc",
      // "editor.background": "#000",
      // "editor.foreground": "#d9d9d9",
      // "editorRuler.foreground": "#2f3336",
      // "tab.inactiveBackground": "#001212cc",
      // "tab.activeBackground": "#000",
      // "statusBar.background": "#000",
      // "sideBar.background": "#000",
      // "panel.background": "#ff0000",
      // "list.focusBackground": "#000"
    }
  },
  //* Custom theme colors
  // ~/.vscode/extensions/wesbos.theme-cobalt2-2.1.6/theme/cobalt2.json
  "editor.tokenColorCustomizations": {
    "[Dracula Soft]": {
      "textMateRules": [{}]
    },
    "[Cobalt2]": {
      "textMateRules": [
        // {
        //   "name": "[HTML] - Entity Name",
        //   "scope": "text.html.basic entity.name",
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        // {
        //   "name": "Meta",
        //   "scope": "meta",
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        // {
        //   "name": "Meta Brace",
        //   "scope": "meta.brace",
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        // {
        //   "name": "Punctuation",
        //   "scope": "punctuation",
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        // {
        //   "name": "Support Variable Property DOM",
        //   "scope": "support.variable.property.dom",
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        // {
        //   "name": "[JSON] - String",
        //   "scope": [
        //     "source.json string",
        //     "source.json punctuation.definition.string"
        //   ],
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        // {
        //   "name": "Variable",
        //   "scope": "variable",
        //   "settings": {
        //     "foreground": "#d9d9d9"
        //   }
        // },
        {
          // Keyword => `import`, `default`, ...
          "name": "[ts, tsx] - Keyword",
          "scope": [
            "source.ts keyword", // override default
            "source.tsx keyword"
          ],
          "settings": {
            "foreground": "#ff9d00"
          }
        },
        {
          "name": "[ts] - Punctuation Parameters",
          "scope": "source.ts punctuation.definition.parameters", // override default
          "settings": {
            "foreground": "#ffee80"
          }
        },
        {
          // Inherited component => class Home extends React.`Component`
          "name": "[js, jsx, ts, tsx] - Inherited Component",
          "scope": [
            "source.js entity.other.inherited-class.js",
            "source.jsx entity.other.inherited-class.jsx",
            "source.ts entity.other.inherited-class.ts",
            "source.tsx entity.other.inherited-class.tsx"
          ],
          "settings": {
            "foreground": "#cccccc",
            "fontStyle": "italic"
          }
        },
        {
          // Keyword => `var`, `const`, `let`
          "name": "[js, jsx, ts, tsx] - Storage",
          "scope": [
            "source.js storage",
            "source.jsx storage",
            "source.ts storage",
            "source.tsx storage"
          ],
          "settings": {
            "foreground": "#ff9d00"
          }
        },
        {
          // Keyword => `function`
          "name": "[js, jsx, ts, tsx] - Keyword function",
          "scope": [
            "source.js storage.type.function.js",
            "source.jsx storage.type.function.jsx",
            "source.ts storage.type.function.ts",
            "source.tsx storage.type.function.tsx",
            "storage.new.js"
          ],
          "settings": {
            "foreground": "#fb94ff",
            "fontStyle": "italic"
          }
        },
        {
          "name": "Italicsify for Operator Mono",
          "scope": [
            // "storage.modifier.ts", // extends, implements keyword
            // "storage.modifier.tsx",
            "entity.other.attribute-name.ts", // attribute names
            "entity.other.attribute-name.tsx"
          ],
          "settings": {
            "foreground": "#ffc600",
            "fontStyle": "italic"
          }
        },
        {
          "name": "Italicsify for Operator Mono",
          "scope": [
            "storage.modifier.js", // extends, implements keyword
            "storage.modifier.jsx"
          ],
          "settings": {
            "foreground": "#ff9d00",
            "fontStyle": "regular"
          }
        },
        {
          "name": "suppport", //???
          "scope": ["source.ts support.type", "source.tsx support.type"],
          "settings": {
            "foreground": "#80ffbb",
            "fontStyle": "italic"
          }
        },
        {
          "name": "css & css-in-js properties",
          "scope": [
            "source.css support.type.property-name",
            "source.js support.type.property-name",
            "source.jsx support.type.property-name",
            "source.ts support.type.property-name",
            "source.tsx support.type.property-name"
          ],
          "settings": {
            "foreground": "#ffee80",
            "fontStyle": "italic"
          }
        },
        {
          "name": "Class Type Interface",
          "scope": ["entity.name.type"],
          "settings": {
            "foreground": "#80ffbb",
            "fontStyle": "italic"
          }
        },
        {
          "name": "Class Type Interface",
          "scope": [
            "entity.name.type.class",
            "source.js entity.name.type.class.js" // Class, override default setting
          ],
          "settings": {
            "foreground": "#80ffbb",
            "fontStyle": "normal" // class reset to no-italic
          }
        },
        {
          "name": "Keyword new",
          "scope": ["keyword.operator.new"],
          "settings": {
            "foreground": "#fb94ff",
            "fontStyle": "italic"
          }
        },
        {
          "name": "this, super, self, etc.",
          "scope": [
            "keyword.expressions-and-types.swift",
            "keyword.other.this",
            "variable.language",
            "variable.language punctuation.definition.variable.php",
            "variable.other.readwrite.instance.ruby",
            "variable.parameter.function.language.special"
          ],
          "settings": {
            "foreground": "#fb94ff",
            "fontStyle": "italic"
          }
        }
      ]
    }
  },
  "gitlens.views.repositories.files.layout": "list",
  "vsicons.dontShowNewVersionMessage": true
}
